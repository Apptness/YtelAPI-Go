/*
 * ytelapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg


import "github.com/satori/go.uuid"

/*
 * Structure for the custom type Body38
 */
type Body38 struct {
    Shortcode       *string         `json:"Shortcode,omitempty" form:"Shortcode,omitempty"` //Only list messages sent from this Short Code
    To              *string         `json:"To,omitempty" form:"To,omitempty"` //Only list messages sent to this number
    DateSent        *string         `json:"DateSent,omitempty" form:"DateSent,omitempty"` //Only list messages sent with the specified date
    Page            *int64          `json:"Page,omitempty" form:"Page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    PageSize        *int64          `json:"PageSize,omitempty" form:"PageSize,omitempty"` //The count of objects to return per page.
}

/*
 * Structure for the custom type Body75
 */
type Body75 struct {
    Shortcode       string          `json:"Shortcode" form:"Shortcode"` //List of valid dedicated shortcode to your Ytel account.
    FriendlyName    *string         `json:"FriendlyName,omitempty" form:"FriendlyName,omitempty"` //User generated name of the dedicated shortcode.
    CallbackMethod  *string         `json:"CallbackMethod,omitempty" form:"CallbackMethod,omitempty"` //Specifies the HTTP method used to request the required StatusCallBackUrl once call connects.
    CallbackUrl     *string         `json:"CallbackUrl,omitempty" form:"CallbackUrl,omitempty"` //URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the call is finished.
    FallbackMethod  *string         `json:"FallbackMethod,omitempty" form:"FallbackMethod,omitempty"` //Specifies the HTTP method used to request the required FallbackUrl once call connects.
    FallbackUrl     *string         `json:"FallbackUrl,omitempty" form:"FallbackUrl,omitempty"` //URL used if any errors occur during execution of InboundXML or at initial request of the required Url provided with the POST.
}

/*
 * Structure for the custom type Body1
 */
type Body1 struct {
    From                  string          `json:"From" form:"From"` //The 10-digit SMS-enabled Ytel number (E.164 format) in which the message is sent.
    To                    string          `json:"To" form:"To"` //The 10-digit phone number (E.164 format) that will receive the message.
    Body                  string          `json:"Body" form:"Body"` //The body message that is to be sent in the text.
    Method                *string         `json:"Method,omitempty" form:"Method,omitempty"` //Specifies the HTTP method used to request the required URL once SMS sent.
    MessageStatusCallback *string         `json:"MessageStatusCallback,omitempty" form:"MessageStatusCallback,omitempty"` //URL that can be requested to receive notification when SMS has Sent. A set of default parameters will be sent here once the SMS is finished.
    Smartsms              *bool           `json:"Smartsms,omitempty" form:"Smartsms,omitempty"` //Check's 'to' number can receive sms or not using Carrier API, if wireless = true then text sms is sent, else wireless = false then call is recieved to end user with audible message.
    DeliveryStatus        *bool           `json:"DeliveryStatus,omitempty" form:"DeliveryStatus,omitempty"` //Delivery reports are a method to tell your system if the message has arrived on the destination phone.
}

/*
 * Structure for the custom type Body64
 */
type Body64 struct {
    ConferenceSid   string          `json:"ConferenceSid" form:"ConferenceSid"` //The unique identifier for a conference.
    Page            *int64          `json:"Page,omitempty" form:"Page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *int64          `json:"Pagesize,omitempty" form:"Pagesize,omitempty"` //The count of objects to return per page.
    Muted           *bool           `json:"Muted,omitempty" form:"Muted,omitempty"` //Specifies if participant should be muted.
    Deaf            *bool           `json:"Deaf,omitempty" form:"Deaf,omitempty"` //Specifies if the participant should hear audio in the conference.
}

/*
 * Structure for the custom type Body63
 */
type Body63 struct {
    Shortcode         string          `json:"Shortcode" form:"Shortcode"` //List of valid shortcode to your Ytel account
    FriendlyName      *string         `json:"FriendlyName,omitempty" form:"FriendlyName,omitempty"` //User generated name of the shortcode
    CallbackUrl       *string         `json:"CallbackUrl,omitempty" form:"CallbackUrl,omitempty"` //URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the call is finished.
    CallbackMethod    *string         `json:"CallbackMethod,omitempty" form:"CallbackMethod,omitempty"` //Specifies the HTTP method used to request the required StatusCallBackUrl once call connects.
    FallbackUrl       *string         `json:"FallbackUrl,omitempty" form:"FallbackUrl,omitempty"` //URL used if any errors occur during execution of InboundXML or at initial request of the required Url provided with the POST.
    FallbackUrlMethod *string         `json:"FallbackUrlMethod,omitempty" form:"FallbackUrlMethod,omitempty"` //Specifies the HTTP method used to request the required FallbackUrl once call connects.
}

/*
 * Structure for the custom type Body22
 */
type Body22 struct {
    CallSid         string          `json:"CallSid" form:"CallSid"` //The unique identifier of each call resource
    AudioUrl        string          `json:"AudioUrl" form:"AudioUrl"` //URL to sound that should be played. You also can add more than one audio file using semicolons e.g. http://example.com/audio1.mp3;http://example.com/audio2.wav
    SayText         string          `json:"SayText" form:"SayText"` //Valid alphanumeric string that should be played to the In-progress call.
    Length          *int64          `json:"Length,omitempty" form:"Length,omitempty"` //Time limit in seconds for audio play back
    Direction       Direction1Enum  `json:"Direction,omitempty" form:"Direction,omitempty"` //The leg of the call audio will be played to
    Mix             *bool           `json:"Mix,omitempty" form:"Mix,omitempty"` //If false, all other audio will be muted
}

/*
 * Structure for the custom type Body21
 */
type Body21 struct {
    To              string          `json:"To" form:"To"` //A valid address that will receive the email. Multiple addresses can be separated by using commas.
    Type            TypeEnum        `json:"Type" form:"Type"` //Specifies the type of email to be sent
    Subject         string          `json:"Subject" form:"Subject"` //The subject of the mail. Must be a valid string.
    Message         string          `json:"Message" form:"Message"` //The email message that is to be sent in the text.
    From            *string         `json:"From,omitempty" form:"From,omitempty"` //A valid address that will send the email.
    Cc              *string         `json:"Cc,omitempty" form:"Cc,omitempty"` //Carbon copy. A valid address that will receive the email. Multiple addresses can be separated by using commas.
    Bcc             *string         `json:"Bcc,omitempty" form:"Bcc,omitempty"` //Blind carbon copy. A valid address that will receive the email. Multiple addresses can be separated by using commas.
    Attachment      *string         `json:"Attachment,omitempty" form:"Attachment,omitempty"` //A file that is attached to the email. Must be less than 7 MB in size.
}

/*
 * Structure for the custom type Body68
 */
type Body68 struct {
    FirstName       string          `json:"FirstName" form:"FirstName"` //Sub account user first name
    LastName        string          `json:"LastName" form:"LastName"` //sub account user last name
    Email           string          `json:"Email" form:"Email"` //Sub account email address
    FriendlyName    string          `json:"FriendlyName" form:"FriendlyName"` //Descriptive name of the sub account
    Password        string          `json:"Password" form:"Password"` //The password of the sub account.  Please make sure to make as password that is at least 8 characters long, contain a symbol, uppercase and a number.
}

/*
 * Structure for the custom type Body24
 */
type Body24 struct {
    CallSid         string          `json:"CallSid" form:"CallSid"` //The unique identifier for the in-progress voice call.
    AudioDirection  AudioDirectionEnum `json:"AudioDirection,omitempty" form:"AudioDirection,omitempty"` //The direction the audio effect should be placed on. If IN, the effects will occur on the incoming audio stream. If OUT, the effects will occur on the outgoing audio stream.
    PitchSemiTones  *float64        `json:"PitchSemiTones,omitempty" form:"PitchSemiTones,omitempty"` //Set the pitch in semitone (half-step) intervals. Value between -14 and 14
    PitchOctaves    *float64        `json:"PitchOctaves,omitempty" form:"PitchOctaves,omitempty"` //Set the pitch in octave intervals.. Value between -1 and 1
    Pitch           *float64        `json:"Pitch,omitempty" form:"Pitch,omitempty"` //Set the pitch (lowness/highness) of the audio. The higher the value, the higher the pitch. Value greater than 0
    Rate            *float64        `json:"Rate,omitempty" form:"Rate,omitempty"` //Set the rate for audio. The lower the value, the lower the rate. value greater than 0
    Tempo           *float64        `json:"Tempo,omitempty" form:"Tempo,omitempty"` //Set the tempo (speed) of the audio. A higher value denotes a faster tempo. Value greater than 0
}

/*
 * Structure for the custom type Body23
 */
type Body23 struct {
    CallSid         string          `json:"CallSid" form:"CallSid"` //The unique identifier of each call resource
    Record          bool            `json:"Record" form:"Record"` //Set true to initiate recording or false to terminate recording
    Direction       DirectionEnum   `json:"Direction,omitempty" form:"Direction,omitempty"` //The leg of the call to record
    TimeLimit       *int64          `json:"TimeLimit,omitempty" form:"TimeLimit,omitempty"` //Time in seconds the recording duration should not exceed
    CallBackUrl     *string         `json:"CallBackUrl,omitempty" form:"CallBackUrl,omitempty"` //URL consulted after the recording completes
    Fileformat      FileformatEnum  `json:"Fileformat,omitempty" form:"Fileformat,omitempty"` //Format of the recording file. Can be .mp3 or .wav
}

/*
 * Structure for the custom type Body58
 */
type Body58 struct {
    Page            *int64          `json:"page,omitempty" form:"page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *int64          `json:"pagesize,omitempty" form:"pagesize,omitempty"` //Number of individual resources listed in the response per page
    From            *string         `json:"From,omitempty" form:"From,omitempty"` //Only list SMS messages sent from this number
    Shortcode       *string         `json:"Shortcode,omitempty" form:"Shortcode,omitempty"` //Only list SMS messages sent to Shortcode
    Datecreated     *string         `json:"Datecreated,omitempty" form:"Datecreated,omitempty"` //Only list SMS messages sent in the specified date MAKE REQUEST
}

/*
 * Structure for the custom type Body52
 */
type Body52 struct {
    Shortcode             int64           `json:"shortcode" form:"shortcode"` //Your dedicated shortcode
    To                    float64         `json:"to" form:"to"` //The number to send your SMS to
    Body                  string          `json:"body" form:"body"` //The body of your message
    Method                *string         `json:"method,omitempty" form:"method,omitempty"` //Specifies the HTTP method used to request the required URL once the Short Code message is sent.GET or POST
    Messagestatuscallback *string         `json:"messagestatuscallback,omitempty" form:"messagestatuscallback,omitempty"` //URL that can be requested to receive notification when Short Code message was sent.
}

/*
 * Structure for the custom type Body54
 */
type Body54 struct {
    Page            *int64          `json:"Page,omitempty" form:"Page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    PageSize        *int64          `json:"PageSize,omitempty" form:"PageSize,omitempty"` //The count of objects to return per page.
    From            *string         `json:"From,omitempty" form:"From,omitempty"` //Filter SMS message objects from this valid 10-digit phone number (E.164 format).
    To              *string         `json:"To,omitempty" form:"To,omitempty"` //Filter SMS message objects to this valid 10-digit phone number (E.164 format).
    DateSent        *string         `json:"DateSent,omitempty" form:"DateSent,omitempty"` //Filter sms message objects by this date.
}

/*
 * Structure for the custom type Body71
 */
type Body71 struct {
    PhoneNumber          string          `json:"PhoneNumber" form:"PhoneNumber"` //A valid comma(,) separated Ytel numbers. (E.164 format).
    VoiceUrl             string          `json:"VoiceUrl" form:"VoiceUrl"` //The URL returning InboundXML incoming calls should execute when connected.
    FriendlyName         *string         `json:"FriendlyName,omitempty" form:"FriendlyName,omitempty"` //A human-readable value for labeling the number.
    VoiceMethod          *string         `json:"VoiceMethod,omitempty" form:"VoiceMethod,omitempty"` //Specifies the HTTP method used to request the VoiceUrl once incoming call connects.
    VoiceFallbackUrl     *string         `json:"VoiceFallbackUrl,omitempty" form:"VoiceFallbackUrl,omitempty"` //URL used if any errors occur during execution of InboundXML on a call or at initial request of the voice url
    VoiceFallbackMethod  *string         `json:"VoiceFallbackMethod,omitempty" form:"VoiceFallbackMethod,omitempty"` //Specifies the HTTP method used to request the VoiceFallbackUrl once incoming call connects.
    HangupCallback       *string         `json:"HangupCallback,omitempty" form:"HangupCallback,omitempty"` //URL that can be requested to receive notification when and how incoming call has ended.
    HangupCallbackMethod *string         `json:"HangupCallbackMethod,omitempty" form:"HangupCallbackMethod,omitempty"` //The HTTP method Ytel will use when requesting the HangupCallback URL.
    HeartbeatUrl         *string         `json:"HeartbeatUrl,omitempty" form:"HeartbeatUrl,omitempty"` //URL that can be used to monitor the phone number.
    HeartbeatMethod      *string         `json:"HeartbeatMethod,omitempty" form:"HeartbeatMethod,omitempty"` //The HTTP method Ytel will use when requesting the HeartbeatUrl.
    SmsUrl               *string         `json:"SmsUrl,omitempty" form:"SmsUrl,omitempty"` //URL requested when an SMS is received.
    SmsMethod            *string         `json:"SmsMethod,omitempty" form:"SmsMethod,omitempty"` //The HTTP method Ytel will use when requesting the SmsUrl.
    SmsFallbackUrl       *string         `json:"SmsFallbackUrl,omitempty" form:"SmsFallbackUrl,omitempty"` //URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
    SmsFallbackMethod    *string         `json:"SmsFallbackMethod,omitempty" form:"SmsFallbackMethod,omitempty"` //The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
}

/*
 * Structure for the custom type Body55
 */
type Body55 struct {
    From                 string          `json:"From" form:"From"` //A valid 10-digit number (E.164 format) that will be initiating the conference call.
    To                   string          `json:"To" form:"To"` //A valid 10-digit number (E.164 format) that is to receive the conference call.
    Method               *string         `json:"Method,omitempty" form:"Method,omitempty"` //Specifies the HTTP method used to request the required URL once call connects.
    StatusCallBackUrl    *string         `json:"StatusCallBackUrl,omitempty" form:"StatusCallBackUrl,omitempty"` //URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the conference is finished.
    StatusCallBackMethod *string         `json:"StatusCallBackMethod,omitempty" form:"StatusCallBackMethod,omitempty"` //Specifies the HTTP methodlinkclass used to request StatusCallbackUrl.
    FallbackUrl          *string         `json:"FallbackUrl,omitempty" form:"FallbackUrl,omitempty"` //URL requested if the initial Url parameter fails or encounters an error
    FallbackMethod       *string         `json:"FallbackMethod,omitempty" form:"FallbackMethod,omitempty"` //Specifies the HTTP method used to request the required FallbackUrl once call connects.
    Record               *bool           `json:"Record,omitempty" form:"Record,omitempty"` //Specifies if the conference should be recorded.
    RecordCallBackUrl    *string         `json:"RecordCallBackUrl,omitempty" form:"RecordCallBackUrl,omitempty"` //Recording parameters will be sent here upon completion.
    RecordCallBackMethod *string         `json:"RecordCallBackMethod,omitempty" form:"RecordCallBackMethod,omitempty"` //Specifies the HTTP method used to request the required URL once conference connects.
    ScheduleTime         *string         `json:"ScheduleTime,omitempty" form:"ScheduleTime,omitempty"` //Schedule conference in future. Schedule time must be greater than current time
    Timeout              *int64          `json:"Timeout,omitempty" form:"Timeout,omitempty"` //The number of seconds the call stays on the line while waiting for an answer. The max time limit is 999 and the default limit is 60 seconds but lower times can be set.
}

/*
 * Structure for the custom type Body47
 */
type Body47 struct {
    PhoneNumber          string          `json:"PhoneNumber" form:"PhoneNumber"` //A valid Ytel number (E.164 format).
    VoiceUrl             string          `json:"VoiceUrl" form:"VoiceUrl"` //URL requested once the call connects
    FriendlyName         *string         `json:"FriendlyName,omitempty" form:"FriendlyName,omitempty"` //Phone number friendly name description
    VoiceMethod          *string         `json:"VoiceMethod,omitempty" form:"VoiceMethod,omitempty"` //Post or Get
    VoiceFallbackUrl     *string         `json:"VoiceFallbackUrl,omitempty" form:"VoiceFallbackUrl,omitempty"` //URL requested if the voice URL is not available
    VoiceFallbackMethod  *string         `json:"VoiceFallbackMethod,omitempty" form:"VoiceFallbackMethod,omitempty"` //Post or Get
    HangupCallback       *string         `json:"HangupCallback,omitempty" form:"HangupCallback,omitempty"` //callback url after a hangup occurs
    HangupCallbackMethod *string         `json:"HangupCallbackMethod,omitempty" form:"HangupCallbackMethod,omitempty"` //Post or Get
    HeartbeatUrl         *string         `json:"HeartbeatUrl,omitempty" form:"HeartbeatUrl,omitempty"` //URL requested once the call connects
    HeartbeatMethod      *string         `json:"HeartbeatMethod,omitempty" form:"HeartbeatMethod,omitempty"` //URL that can be requested every 60 seconds during the call to notify of elapsed time
    SmsUrl               *string         `json:"SmsUrl,omitempty" form:"SmsUrl,omitempty"` //URL requested when an SMS is received
    SmsMethod            *string         `json:"SmsMethod,omitempty" form:"SmsMethod,omitempty"` //Post or Get
    SmsFallbackUrl       *string         `json:"SmsFallbackUrl,omitempty" form:"SmsFallbackUrl,omitempty"` //URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
    SmsFallbackMethod    *string         `json:"SmsFallbackMethod,omitempty" form:"SmsFallbackMethod,omitempty"` //The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
}

/*
 * Structure for the custom type Body59
 */
type Body59 struct {
    Keywordid       string          `json:"Keywordid" form:"Keywordid"` //The unique identifier of each keyword
}

/*
 * Structure for the custom type Body14
 */
type Body14 struct {
    PhoneNumber     string          `json:"PhoneNumber" form:"PhoneNumber"` //A valid 10-digit Ytel number (E.164 format).
}

/*
 * Structure for the custom type Body17
 */
type Body17 struct {
    Email           string          `json:"Email" form:"Email"` //A valid email address that is to be remove from the spam list.
}

/*
 * Structure for the custom type Body16
 */
type Body16 struct {
    PhoneNumber     string          `json:"PhoneNumber" form:"PhoneNumber"` //A valid Ytel 10-digit phone number (E.164 format).
}

/*
 * Structure for the custom type Body19
 */
type Body19 struct {
    Email           string          `json:"email" form:"email"` //A valid email address that is to be added to the unsubscribe list
}

/*
 * Structure for the custom type Body18
 */
type Body18 struct {
    Email           string          `json:"Email" form:"Email"` //The email address to be remove from the blocked list.
}

/*
 * Structure for the custom type Body11
 */
type Body11 struct {
    Audiourl        string          `json:"audiourl" form:"audiourl"` //URL pointing to the location of the audio file that is to be transcribed.
}

/*
 * Structure for the custom type Body10
 */
type Body10 struct {
    RecordingSid    string          `json:"recordingSid" form:"recordingSid"` //The unique identifier for a recording object.
}

/*
 * Structure for the custom type Body13
 */
type Body13 struct {
    Recordingsid    string          `json:"recordingsid" form:"recordingsid"` //The unique identifier for a recording.
}

/*
 * Structure for the custom type Body56
 */
type Body56 struct {
    ConferenceSid   string          `json:"ConferenceSid" form:"ConferenceSid"` //The unique identifier for a conference object.
}

/*
 * Structure for the custom type Body12
 */
type Body12 struct {
    Recordingsid    string          `json:"recordingsid" form:"recordingsid"` //The unique identifier for the recording.
}

/*
 * Structure for the custom type Body39
 */
type Body39 struct {
    Page            *int64          `json:"page,omitempty" form:"page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *int64          `json:"pagesize,omitempty" form:"pagesize,omitempty"` //Number of individual resources listed in the response per page
    From            *string         `json:"from,omitempty" form:"from,omitempty"` //From Number to Inbound ShortCode
    Shortcode       *string         `json:"Shortcode,omitempty" form:"Shortcode,omitempty"` //Only list messages sent to this Short Code
}

/*
 * Structure for the custom type Body73
 */
type Body73 struct {
    NumberType      NumberType2Enum `json:"NumberType" form:"NumberType"` //The capability the number supports.
    AreaCode        string          `json:"AreaCode" form:"AreaCode"` //Specifies the area code for the returned list of available numbers. Only available for North American numbers.
    Quantity        string          `json:"Quantity" form:"Quantity"` //A positive integer that tells how many number you want to buy at a time.
    Leftover        *string         `json:"Leftover,omitempty" form:"Leftover,omitempty"` //If desired quantity is unavailable purchase what is available .
}

/*
 * Structure for the custom type Body6
 */
type Body6 struct {
    ConferenceSid   string          `json:"conferenceSid" form:"conferenceSid"` //ID of the active conference
    ParticipantSid  string          `json:"ParticipantSid" form:"ParticipantSid"` //ID of an active participant
    Muted           *bool           `json:"Muted,omitempty" form:"Muted,omitempty"` //Mute a participant
    Deaf            *bool           `json:"Deaf,omitempty" form:"Deaf,omitempty"` //Make it so a participant cant hear
}

/*
 * Structure for the custom type Body5
 */
type Body5 struct {
    Numbertype      Numbertype1Enum `json:"numbertype" form:"numbertype"` //Number type either SMS,Voice or all
    Areacode        string          `json:"areacode" form:"areacode"` //Specifies the area code for the returned list of available numbers. Only available for North American numbers.
    Pagesize        *int64          `json:"pagesize,omitempty" form:"pagesize,omitempty"` //The count of objects to return.
}

/*
 * Structure for the custom type Body31
 */
type Body31 struct {
    Offset          *string         `json:"Offset,omitempty" form:"Offset,omitempty"` //The starting point of the list of bounced emails that should be returned.
    Limit           *string         `json:"Limit,omitempty" form:"Limit,omitempty"` //The count of results that should be returned.
}

/*
 * Structure for the custom type Body7
 */
type Body7 struct {
    ConferenceSid   string          `json:"ConferenceSid" form:"ConferenceSid"` //The unique identifier for a conference object.
    ParticipantSid  string          `json:"ParticipantSid" form:"ParticipantSid"` //The unique identifier for a participant object.
}

/*
 * Structure for the custom type Body33
 */
type Body33 struct {
    Offset          *string         `json:"Offset,omitempty" form:"Offset,omitempty"` //The starting point of the list of blocked emails that should be returned.
    Limit           *string         `json:"Limit,omitempty" form:"Limit,omitempty"` //The count of results that should be returned.
}

/*
 * Structure for the custom type Body76
 */
type Body76 struct {
    Shortcode       *string         `json:"Shortcode,omitempty" form:"Shortcode,omitempty"` //Only list Short Code Assignment sent from this Short Code
    Page            *string         `json:"page,omitempty" form:"page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *string         `json:"pagesize,omitempty" form:"pagesize,omitempty"` //The count of objects to return per page.
}

/*
 * Structure for the custom type Body32
 */
type Body32 struct {
    Offset          *string         `json:"Offset,omitempty" form:"Offset,omitempty"` //The starting point of the list of spam emails that should be returned.
    Limit           *string         `json:"Limit,omitempty" form:"Limit,omitempty"` //The count of results that should be returned.
}

/*
 * Structure for the custom type Body4
 */
type Body4 struct {
    Page            *int64          `json:"Page,omitempty" form:"Page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    PageSize        *int64          `json:"PageSize,omitempty" form:"PageSize,omitempty"` //The count of objects to return per page.
}

/*
 * Structure for the custom type Body70
 */
type Body70 struct {
    Page            *int64          `json:"Page,omitempty" form:"Page,omitempty"` //Which page of the overall response will be returned. Page indexing starts at 1.
    PageSize        *int64          `json:"PageSize,omitempty" form:"PageSize,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    NumberType      NumberTypeEnum  `json:"NumberType,omitempty" form:"NumberType,omitempty"` //The capability supported by the number.Number type either SMS,Voice or all
    FriendlyName    *string         `json:"FriendlyName,omitempty" form:"FriendlyName,omitempty"` //A human-readable label added to the number object.
}

/*
 * Structure for the custom type Body26
 */
type Body26 struct {
    Offset          *string         `json:"Offset,omitempty" form:"Offset,omitempty"` //The starting point of the list of unsubscribed emails that should be returned.
    Limit           *string         `json:"Limit,omitempty" form:"Limit,omitempty"` //The count of results that should be returned.
}

/*
 * Structure for the custom type Body28
 */
type Body28 struct {
    CallSid         string          `json:"CallSid" form:"CallSid"` //The unique identifier for voice call that is in progress.
    Url             *string         `json:"Url,omitempty" form:"Url,omitempty"` //URL the in-progress call will be redirected to
    Method          *string         `json:"Method,omitempty" form:"Method,omitempty"` //The method used to request the above Url parameter
    Status          Status1Enum     `json:"Status,omitempty" form:"Status,omitempty"` //Status to set the in-progress call to
}

/*
 * Structure for the custom type Body27
 */
type Body27 struct {
    CallSid           string          `json:"CallSid" form:"CallSid"` //The unique identifier of each call resource
    PlayDtmf          string          `json:"PlayDtmf" form:"PlayDtmf"` //DTMF digits to play to the call. 0-9, #, *, W, or w
    PlayDtmfDirection PlayDtmfDirectionEnum `json:"PlayDtmfDirection,omitempty" form:"PlayDtmfDirection,omitempty"` //The leg of the call DTMF digits should be sent to
}

/*
 * Structure for the custom type Body29
 */
type Body29 struct {
    Offset          *string         `json:"Offset,omitempty" form:"Offset,omitempty"` //The starting point of the list of invalid emails that should be returned.
    Limit           *string         `json:"Limit,omitempty" form:"Limit,omitempty"` //The count of results that should be returned.
}

/*
 * Structure for the custom type Body62
 */
type Body62 struct {
    Page            *int64          `json:"page,omitempty" form:"page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *int64          `json:"pagesize,omitempty" form:"pagesize,omitempty"` //Number of individual resources listed in the response per page
}

/*
 * Structure for the custom type Body66
 */
type Body66 struct {
    Phonenumber     string          `json:"phonenumber" form:"phonenumber"` //A valid 10-digit Ytel number (E.164 format).
    Fromaccountsid  string          `json:"fromaccountsid" form:"fromaccountsid"` //A specific Accountsid from where Number is getting transfer.
    Toaccountsid    string          `json:"toaccountsid" form:"toaccountsid"` //A specific Accountsid to which Number is getting transfer.
}

/*
 * Structure for the custom type Body65
 */
type Body65 struct {
    Page            *int64          `json:"page,omitempty" form:"page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *int64          `json:"pagesize,omitempty" form:"pagesize,omitempty"` //Number of individual resources listed in the response per page
    FriendlyName    *string         `json:"FriendlyName,omitempty" form:"FriendlyName,omitempty"` //Only return conferences with the specified FriendlyName
    DateCreated     *string         `json:"DateCreated,omitempty" form:"DateCreated,omitempty"` //Conference created date
}

/*
 * Structure for the custom type Body60
 */
type Body60 struct {
    Page            *int64          `json:"page,omitempty" form:"page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *int64          `json:"pagesize,omitempty" form:"pagesize,omitempty"` //Number of individual resources listed in the response per page
    Keyword         *string         `json:"Keyword,omitempty" form:"Keyword,omitempty"` //Only list keywords of keyword
    Shortcode       *int64          `json:"Shortcode,omitempty" form:"Shortcode,omitempty"` //Only list keywords of shortcode
}

/*
 * Structure for the custom type Body51
 */
type Body51 struct {
    ConferenceSid     string          `json:"ConferenceSid" form:"ConferenceSid"` //The unique identifier for a conference object.
    ParticipantNumber string          `json:"ParticipantNumber" form:"ParticipantNumber"` //The phone number of the participant to be added.
    Muted             *bool           `json:"Muted,omitempty" form:"Muted,omitempty"` //Specifies if participant should be muted.
    Deaf              *bool           `json:"Deaf,omitempty" form:"Deaf,omitempty"` //Specifies if the participant should hear audio in the conference.
}

/*
 * Structure for the custom type Body50
 */
type Body50 struct {
    Page            *int64          `json:"page,omitempty" form:"page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *int64          `json:"pagesize,omitempty" form:"pagesize,omitempty"` //The count of objects to return per page.
    Status          StatusEnum      `json:"status,omitempty" form:"status,omitempty"` //The state of the transcription.
    DateTranscribed *string         `json:"dateTranscribed,omitempty" form:"dateTranscribed,omitempty"` //The date the transcription took place.
}

/*
 * Structure for the custom type Body53
 */
type Body53 struct {
    Type            *string         `json:"type,omitempty" form:"type,omitempty"` //The type (category) of template Valid values: marketing, authorization
    Page            *int64          `json:"page,omitempty" form:"page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *int64          `json:"pagesize,omitempty" form:"pagesize,omitempty"` //The count of objects to return per page.
    Shortcode       *string         `json:"Shortcode,omitempty" form:"Shortcode,omitempty"` //Only list templates of type
}

/*
 * Structure for the custom type Body57
 */
type Body57 struct {
    ConferenceSid   string          `json:"ConferenceSid" form:"ConferenceSid"` //The unique identifier for a conference object.
    ParticipantSid  string          `json:"ParticipantSid" form:"ParticipantSid"` //The unique identifier for a participant object.
    AudioUrl        AudioUrlEnum    `json:"AudioUrl" form:"AudioUrl"` //The URL for the audio file that is to be played during the conference. Multiple audio files can be chained by using a semicolon.
}

/*
 * Structure for the custom type Body48
 */
type Body48 struct {
    Page            *int64          `json:"page,omitempty" form:"page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    Pagesize        *int64          `json:"pagesize,omitempty" form:"pagesize,omitempty"` //The count of objects to return per page.
    Datecreated     *string         `json:"Datecreated,omitempty" form:"Datecreated,omitempty"` //Filter results by creation date
    Callsid         *string         `json:"callsid,omitempty" form:"callsid,omitempty"` //The unique identifier for a call.
}

/*
 * Structure for the custom type Body49
 */
type Body49 struct {
    ProductCode        ProductCodeEnum `json:"ProductCode,omitempty" form:"ProductCode,omitempty"` //Filter usage results by product type.
    StartDate          *string         `json:"startDate,omitempty" form:"startDate,omitempty"` //Filter usage objects by start date.
    EndDate            *string         `json:"endDate,omitempty" form:"endDate,omitempty"` //Filter usage objects by end date.
    IncludeSubAccounts *string         `json:"IncludeSubAccounts,omitempty" form:"IncludeSubAccounts,omitempty"` //Will include all subaccount usage data
}

/*
 * Structure for the custom type Body40
 */
type Body40 struct {
    Shortcode             string          `json:"shortcode" form:"shortcode"` //The Short Code number that is the sender of this message
    To                    string          `json:"to" form:"to"` //A valid 10-digit number that should receive the message
    Templateid            uuid.UUID       `json:"templateid" form:"templateid"` //The unique identifier for the template used for the message
    Data                  string          `json:"data" form:"data"` //format of your data, example: {companyname}:test,{otpcode}:1234
    Method                *string         `json:"Method,omitempty" form:"Method,omitempty"` //Specifies the HTTP method used to request the required URL once the Short Code message is sent.
    MessageStatusCallback *string         `json:"MessageStatusCallback,omitempty" form:"MessageStatusCallback,omitempty"` //URL that can be requested to receive notification when Short Code message was sent.
}

/*
 * Structure for the custom type Body42
 */
type Body42 struct {
    Page            *int64          `json:"Page,omitempty" form:"Page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    PageSize        *int64          `json:"PageSize,omitempty" form:"PageSize,omitempty"` //Number of individual resources listed in the response per page
    To              *string         `json:"To,omitempty" form:"To,omitempty"` //Filter calls that were sent to this 10-digit number (E.164 format).
    From            *string         `json:"From,omitempty" form:"From,omitempty"` //Filter calls that were sent from this 10-digit number (E.164 format).
    DateCreated     *string         `json:"DateCreated,omitempty" form:"DateCreated,omitempty"` //Return calls that are from a specified date.
}

/*
 * Structure for the custom type Body41
 */
type Body41 struct {
    Page            *int64          `json:"Page,omitempty" form:"Page,omitempty"` //The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    PageSize        *int64          `json:"PageSize,omitempty" form:"PageSize,omitempty"` //Number of individual resources listed in the response per page
    From            *string         `json:"From,omitempty" form:"From,omitempty"` //Filter SMS message objects from this valid 10-digit phone number (E.164 format).
    To              *string         `json:"To,omitempty" form:"To,omitempty"` //Filter SMS message objects to this valid 10-digit phone number (E.164 format).
    DateSent        *string         `json:"DateSent,omitempty" form:"DateSent,omitempty"` //Only list SMS messages sent in the specified date range
}

/*
 * Structure for the custom type Body43
 */
type Body43 struct {
    From                string          `json:"From" form:"From"` //A valid Ytel Voice enabled number (E.164 format) that will be initiating the phone call.
    RVMCallerId         string          `json:"RVMCallerId" form:"RVMCallerId"` //A required secondary Caller ID for RVM to work.
    To                  string          `json:"To" form:"To"` //A valid number (E.164 format) that will receive the phone call.
    VoiceMailURL        string          `json:"VoiceMailURL" form:"VoiceMailURL"` //The URL requested once the RVM connects. A set of default parameters will be sent here.
    Method              *string         `json:"Method,omitempty" form:"Method,omitempty"` //Specifies the HTTP method used to request the required URL once call connects.
    StatusCallBackUrl   *string         `json:"StatusCallBackUrl,omitempty" form:"StatusCallBackUrl,omitempty"` //URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the call is finished.
    StatsCallBackMethod *string         `json:"StatsCallBackMethod,omitempty" form:"StatsCallBackMethod,omitempty"` //Specifies the HTTP method used to request the required StatusCallBackUrl once call connects.
}

/*
 * Structure for the custom type Body44
 */
type Body44 struct {
    Email           string          `json:"Email" form:"Email"` //A valid email address that is to be remove from the invalid email list.
}

/*
 * Structure for the custom type Body46
 */
type Body46 struct {
    Callsid         string          `json:"callsid" form:"callsid"` //The unique identifier for the voice call.
}

/*
 * Structure for the custom type Body45
 */
type Body45 struct {
    PhoneNumber     string          `json:"PhoneNumber" form:"PhoneNumber"` //A valid 10-digit number (E.164 format).
}

/*
 * Structure for the custom type Body36
 */
type Body36 struct {
    Date            string          `json:"Date" form:"Date"` //Filter account information based on date.
}

/*
 * Structure for the custom type Body72
 */
type Body72 struct {
    Phonenumber     string          `json:"Phonenumber" form:"Phonenumber"` //Specifies the multiple phone numbers for check updated spamscore .
}

/*
 * Structure for the custom type Body8
 */
type Body8 struct {
    PhoneNumber     string          `json:"PhoneNumber" form:"PhoneNumber"` //A valid Ytel comma separated numbers (E.164 format).
}

/*
 * Structure for the custom type Body74
 */
type Body74 struct {
    CallSid         string          `json:"callSid" form:"callSid"` //The unique identifier for the voice call.
}

/*
 * Structure for the custom type Body30
 */
type Body30 struct {
    Email           string          `json:"Email" form:"Email"` //The email address to be remove from the bounced email list.
}

/*
 * Structure for the custom type Body9
 */
type Body9 struct {
    Transcriptionsid string          `json:"transcriptionsid" form:"transcriptionsid"` //The unique identifier for a transcription object.
}

/*
 * Structure for the custom type Body35
 */
type Body35 struct {
    SubAccountSID   string          `json:"SubAccountSID" form:"SubAccountSID"` //The SubaccountSid to be activated or suspended
    Activate        ActivateEnum    `json:"Activate" form:"Activate"` //0 to suspend or 1 to activate
}

/*
 * Structure for the custom type Body34
 */
type Body34 struct {
    SubAccountSID   string          `json:"SubAccountSID" form:"SubAccountSID"` //The SubaccountSid to be deleted
    MergeNumber     MergeNumberEnum `json:"MergeNumber" form:"MergeNumber"` //0 to delete or 1 to merge numbers to parent account.
}

/*
 * Structure for the custom type Body2
 */
type Body2 struct {
    TemplateId      uuid.UUID       `json:"TemplateId" form:"TemplateId"` //The unique identifier for a template object
}

/*
 * Structure for the custom type Body3
 */
type Body3 struct {
    MessageSid      string          `json:"MessageSid" form:"MessageSid"` //The unique identifier for the sms resource
}

/*
 * Structure for the custom type Body69
 */
type Body69 struct {
    MessageSid      string          `json:"MessageSid" form:"MessageSid"` //The unique identifier for a sms message.
}

/*
 * Structure for the custom type Body25
 */
type Body25 struct {
    Email           string          `json:"email" form:"email"` //A valid email address that is to be remove from the unsubscribe list.
}

/*
 * Structure for the custom type Body61
 */
type Body61 struct {
    Shortcode       string          `json:"Shortcode" form:"Shortcode"` //List of valid Shortcode to your Ytel account
}

/*
 * Structure for the custom type Body20
 */
type Body20 struct {
    ConferenceSid   string          `json:"ConferenceSid" form:"ConferenceSid"` //The unique identifier of each conference resource
}

/*
 * Structure for the custom type Body67
 */
type Body67 struct {
    Shortcode       string          `json:"Shortcode" form:"Shortcode"` //List of valid Dedicated Short Code to your Ytel account
}

/*
 * Structure for the custom type Body
 */
type Body struct {
    From                  string          `json:"From" form:"From"` //A valid Ytel Voice enabled number (E.164 format) that will be initiating the phone call.
    To                    string          `json:"To" form:"To"` //To number
    Url                   string          `json:"Url" form:"Url"` //URL requested once the call connects
    Method                *string         `json:"Method,omitempty" form:"Method,omitempty"` //Specifies the HTTP method used to request the required URL once call connects.
    StatusCallBackUrl     *string         `json:"StatusCallBackUrl,omitempty" form:"StatusCallBackUrl,omitempty"` //URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the call is finished.
    StatusCallBackMethod  *string         `json:"StatusCallBackMethod,omitempty" form:"StatusCallBackMethod,omitempty"` //Specifies the HTTP methodlinkclass used to request StatusCallbackUrl.
    FallBackUrl           *string         `json:"FallBackUrl,omitempty" form:"FallBackUrl,omitempty"` //URL requested if the initial Url parameter fails or encounters an error
    FallBackMethod        *string         `json:"FallBackMethod,omitempty" form:"FallBackMethod,omitempty"` //Specifies the HTTP method used to request the required FallbackUrl once call connects.
    HeartBeatUrl          *string         `json:"HeartBeatUrl,omitempty" form:"HeartBeatUrl,omitempty"` //URL that can be requested every 60 seconds during the call to notify of elapsed tim
    HeartBeatMethod       *string         `json:"HeartBeatMethod,omitempty" form:"HeartBeatMethod,omitempty"` //Specifies the HTTP method used to request HeartbeatUrl.
    Timeout               *int64          `json:"Timeout,omitempty" form:"Timeout,omitempty"` //Time (in seconds) Ytel should wait while the call is ringing before canceling the call
    PlayDtmf              *string         `json:"PlayDtmf,omitempty" form:"PlayDtmf,omitempty"` //DTMF Digits to play to the call once it connects. 0-9, #, or *
    HideCallerId          *bool           `json:"HideCallerId,omitempty" form:"HideCallerId,omitempty"` //Specifies if the caller id will be hidden
    Record                *bool           `json:"Record,omitempty" form:"Record,omitempty"` //Specifies if the call should be recorded
    RecordCallBackUrl     *string         `json:"RecordCallBackUrl,omitempty" form:"RecordCallBackUrl,omitempty"` //Recording parameters will be sent here upon completion
    RecordCallBackMethod  *string         `json:"RecordCallBackMethod,omitempty" form:"RecordCallBackMethod,omitempty"` //Method used to request the RecordCallback URL.
    Transcribe            *bool           `json:"Transcribe,omitempty" form:"Transcribe,omitempty"` //Specifies if the call recording should be transcribed
    TranscribeCallBackUrl *string         `json:"TranscribeCallBackUrl,omitempty" form:"TranscribeCallBackUrl,omitempty"` //Transcription parameters will be sent here upon completion
    IfMachine             IfMachineEnum   `json:"IfMachine,omitempty" form:"IfMachine,omitempty"` //How Ytel should handle the receiving numbers voicemail machine
    IfMachineUrl          *string         `json:"IfMachineUrl,omitempty" form:"IfMachineUrl,omitempty"` //URL requested when IfMachine=continue
    IfMachineMethod       *string         `json:"IfMachineMethod,omitempty" form:"IfMachineMethod,omitempty"` //Method used to request the IfMachineUrl.
    Feedback              *bool           `json:"Feedback,omitempty" form:"Feedback,omitempty"` //Specify if survey should be enable or not
    SurveyId              *string         `json:"SurveyId,omitempty" form:"SurveyId,omitempty"` //The unique identifier for the survey.
}

/*
 * Structure for the custom type Body77
 */
type Body77 struct {
    From                  string          `json:"From" form:"From"` //A valid Ytel Voice enabled number (E.164 format) that will be initiating the phone call.
    To                    string          `json:"To" form:"To"` //Please enter multiple E164 number. You can add max 10 numbers. Add numbers separated with comma. e.g : +12223334444,+15556667777
    Url                   string          `json:"Url" form:"Url"` //URL requested once the call connects
    GroupConfirmKey       string          `json:"GroupConfirmKey" form:"GroupConfirmKey"` //Define the DTMF that the called party should send to bridge the call. Allowed Values : 0-9, #, *
    GroupConfirmFile      GroupConfirmFileEnum `json:"GroupConfirmFile" form:"GroupConfirmFile"` //Specify the audio file you want to play when the called party picks up the call
    Method                *string         `json:"Method,omitempty" form:"Method,omitempty"` //Specifies the HTTP method used to request the required URL once call connects.
    StatusCallBackUrl     *string         `json:"StatusCallBackUrl,omitempty" form:"StatusCallBackUrl,omitempty"` //URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the call is finished.
    StatusCallBackMethod  *string         `json:"StatusCallBackMethod,omitempty" form:"StatusCallBackMethod,omitempty"` //Specifies the HTTP methodlinkclass used to request StatusCallbackUrl.
    FallBackUrl           *string         `json:"FallBackUrl,omitempty" form:"FallBackUrl,omitempty"` //URL requested if the initial Url parameter fails or encounters an error
    FallBackMethod        *string         `json:"FallBackMethod,omitempty" form:"FallBackMethod,omitempty"` //Specifies the HTTP method used to request the required FallbackUrl once call connects.
    HeartBeatUrl          *string         `json:"HeartBeatUrl,omitempty" form:"HeartBeatUrl,omitempty"` //URL that can be requested every 60 seconds during the call to notify of elapsed time and pass other general information.
    HeartBeatMethod       *string         `json:"HeartBeatMethod,omitempty" form:"HeartBeatMethod,omitempty"` //Specifies the HTTP method used to request HeartbeatUrl.
    Timeout               *int64          `json:"Timeout,omitempty" form:"Timeout,omitempty"` //Time (in seconds) we should wait while the call is ringing before canceling the call
    PlayDtmf              *string         `json:"PlayDtmf,omitempty" form:"PlayDtmf,omitempty"` //DTMF Digits to play to the call once it connects. 0-9, #, or *
    HideCallerId          *string         `json:"HideCallerId,omitempty" form:"HideCallerId,omitempty"` //Specifies if the caller id will be hidden
    Record                *bool           `json:"Record,omitempty" form:"Record,omitempty"` //Specifies if the call should be recorded
    RecordCallBackUrl     *string         `json:"RecordCallBackUrl,omitempty" form:"RecordCallBackUrl,omitempty"` //Recording parameters will be sent here upon completion
    RecordCallBackMethod  *string         `json:"RecordCallBackMethod,omitempty" form:"RecordCallBackMethod,omitempty"` //Method used to request the RecordCallback URL.
    Transcribe            *bool           `json:"Transcribe,omitempty" form:"Transcribe,omitempty"` //Specifies if the call recording should be transcribed
    TranscribeCallBackUrl *string         `json:"TranscribeCallBackUrl,omitempty" form:"TranscribeCallBackUrl,omitempty"` //Transcription parameters will be sent here upon completion
}

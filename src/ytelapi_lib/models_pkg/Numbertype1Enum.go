/*
 * ytelapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for Numbertype1Enum enum
 */
type Numbertype1Enum int

/**
 * Value collection for Numbertype1Enum enum
 */
const (
    Numbertype1_ALL Numbertype1Enum = 1 + iota
    Numbertype1_VOICE
    Numbertype1_SMS
)

func (r Numbertype1Enum) MarshalJSON() ([]byte, error) { 
    s := Numbertype1EnumToValue(r)
    return json.Marshal(s) 
} 

func (r *Numbertype1Enum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  Numbertype1EnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts Numbertype1Enum to its string representation
 */
func Numbertype1EnumToValue(numbertype1Enum Numbertype1Enum) string {
    switch numbertype1Enum {
        case Numbertype1_ALL:
    		return "all"		
        case Numbertype1_VOICE:
    		return "voice"		
        case Numbertype1_SMS:
    		return "sms"		
        default:
        	return "all"
    }
}

/**
 * Converts Numbertype1Enum Array to its string Array representation
*/
func Numbertype1EnumArrayToValue(numbertype1Enum []Numbertype1Enum) []string {
    convArray := make([]string,len( numbertype1Enum))
    for i:=0; i<len(numbertype1Enum);i++ {
        convArray[i] = Numbertype1EnumToValue(numbertype1Enum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func Numbertype1EnumFromValue(value string) Numbertype1Enum {
    switch value {
        case "all":
            return Numbertype1_ALL
        case "voice":
            return Numbertype1_VOICE
        case "sms":
            return Numbertype1_SMS
        default:
            return Numbertype1_ALL
    }
}
